@using Castle.Core.Internal
@using Microsoft.EntityFrameworkCore.Query.SqlExpressions
@using PharmacyNetwork.ApplicationCore.Entities
@using PharmacyNetwork.ApplicationCore.Interfaces
@model List<PharmacyNetwork.Web.Models.CartItem>
@inject IAsyncRepository<PharmacyWharehouse> Repo;

@{
    ViewData["Title"] = "Корзина";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/lib/bootstrap-table/dist/bootstrap-table.min.css" rel="stylesheet">

<h1 class="mb-3 text-center">Корзина</h1>

@if (!Model.IsNullOrEmpty())
{
    <div class="table-responsive">
        <table data-toggle="table"
               data-show-button-text="true"
               data-show-search-clear-button="true"
               data-classes="table table-hover"
               data-pagination="true"
               data-pagination-loop="false"
               data-page-list="[3, 10, 25, 50, 100, 200, All]"
               data-locale="ru-RU">
            <thead>
                <tr>
                    <th scope="col" data-sortable="true" data-field="name">
                        Медицинский товар
                    </th>
                    <th scope="col" data-sortable="true" data-field="itemCount">
                        На складе
                    </th>
                    <th scope="col" data-sortable="true" data-field="count">
                        В заказе
                    </th>
                    <th scope="col" data-sortable="true" data-field="summ">
                        Сумма
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Repo.GetAllAsync().Result.Find(m => m.MedItemId == item.MedicalItemId).MedItem.MedItemName
                        </td>
                        <td>
                            @Repo.GetAllAsync().Result.Find(m => m.PharmId == item.PharmacyId && m.MedItemId == item.MedicalItemId).ItemCount.ToString()
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Count)
                        </td>
                        <td>
                            @(item.Count * item.MedItemPrice) грн.
                        </td>
                        <td>
                            <a class="btn btn-danger btn-sm" asp-action="DeleteFromCart" asp-route-id="@item.MedicalItemId">Убрать</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

        var summ = Model.Sum(item => item.MedItemPrice * item.Count);

        var percent = summ / 200;
        percent = percent > 10 ? 10 : percent;

        var summPercent = summ * ((100 - percent) / 100);
    

    <div class="mt-3">
        <h5>Сумма покупки = @Html.DisplayFor(s => summ) грн.</h5>
        <h5>Скидка = @Html.DisplayFor(p => percent) %</h5>
        <h5>Сумма со скидкой = @Html.DisplayFor(s => summPercent) грн.</h5>
    </div>

    <div>
        <a class="btn btn-lg btn-success" asp-action="ConfirmPurchase">Оформить покупку</a>
    </div>

}
else
{
    <div class="row m-5">
        <div class="col">
            <h1 class="text-dark text-center">КОРЗИНА ПУСТА!</h1>
        </div>
    </div>
}

@section Scripts {
    <script src="~/lib/bootstrap-table/dist/bootstrap-table.min.js"></script>
    <script src="~/lib/bootstrap-table/dist/extensions/filter-control/bootstrap-table-filter-control.min.js"></script>
    <script src="~/lib/bootstrap-table/dist/bootstrap-table-locale-all.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
}